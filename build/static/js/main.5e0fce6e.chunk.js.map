{"version":3,"sources":["components/slider_content/slider_content.js","components/slide/slide.js","components/dots/dots.js","components/track_bar/track_bar.js","components/next/next.js","components/slider/slider.js","serviceWorker.js","index.js"],"names":["SliderContent","styled","div","props","direction","translate","transition","height","width","flexDirection","Slide","SlideComponent","content","type","src","url","css","slides","settings","sliderDots","sliderDirection","trackBar","trackBarDesc","Fragment","Dot","active","Dots","activeIndex","map","slide","i","key","uuidv4","TrackBar","navigateTo","barLength","barDesc","useState","padPlace","state","setState","padStart","React","useRef","padEnd","padPlacement","onMovePad","e","original_event","touches","preventDefault","stopPropagation","current","clientX","_","debounce","parseInt","debouncedNav","navigate","onDropPad","document","removeEventListener","onDragPad","isUndefined","addEventListener","className","onMouseDown","onTouchStart","desc","Next","display","Slider","showNext","getWidth","window","innerWidth","getSlideLength","innerHeight","sliderRef","thumbRef","diff","moveEnd","cursorPlacement","handleMove","clientY","calcCurrentPlace","handleEndMove","length","prevSlide","nextSlide","handleStartMove","SlidesContent","ref","flexDdirection","SliderCSS","pageNum","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5e0fce6e.chunk.js","sourcesContent":["/** @jsx jsx */\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nconst SliderContent = styled.div`\n        transform: translate${props => props.direction}(-${props => props.translate}px);\n        transition: transform ease-out ${props => props.transition}s;\n        height: ${props => props.height};\n        width: ${props => props.width};\n        background-color: gray;\n        display: flex;\n        flex-direction: ${props => props.flexDirection};\n       `\n\nexport { SliderContent };","/** @jsx jsx */\nimport React from 'react';\nimport { css, jsx } from '@emotion/core';\nimport { Slider } from './../slider';\n\nconst Slide = ({ content, width }) => {\n  let SlideComponent;\n\n  // eslint-disable-next-line default-case\n  switch (content.type) {\n    case 'image':\n      // eslint-disable-next-line jsx-a11y/alt-text\n      SlideComponent = <img\n        src={content.url}\n        css={css`\n          height: 100vh;\n          width: ${width}px;\n        `}\n      />;\n      break;\n\n    case 'slider':\n      SlideComponent = <Slider \n        slides={content.content} \n        settings={{\n          sliderDots: false,\n          sliderDirection: 'X',\n          trackBar: true,\n          trackBarDesc: ['1988', '2009', '2016']\n        }}\n      />\n    break;\n  }\n\n  return (\n    <React.Fragment>\n      {SlideComponent}\n    </React.Fragment>\n  );\n};\n\nexport { Slide };","\n/** @jsx jsx */\nimport React from 'react';\nimport { css, jsx } from '@emotion/core';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Dot = ({ active }) => (\n  <span\n    css={css`\n      padding: 13px;\n      margin-bottom: 15px;\n      cursor: pointer;\n      border-radius: 50%;\n      background: ${active ? '#f78b1f' : '#ffffff'};\n    `}\n  />\n);\n\nconst Dots = ({ slides, activeIndex }) => (\n  <div\n    css={css`\n      position: absolute;\n      right: 50px;\n      top: 50%;\n      transform: translateY(-50%);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n\n    `}\n  >\n    {slides.map((slide, i) => (\n      <Dot key={uuidv4()} active={activeIndex === i} />\n    ))}\n  </div>\n);\n\nexport {\n  Dots\n};","/** @jsx jsx */\nimport React, { useState } from 'react'\nimport { css, jsx } from '@emotion/core';\nimport _ from 'lodash';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst TrackBar = ({ navigateTo, barLength, barDesc }) => {\n  const [state, setState] = useState({\n      padPlace: 0,\n    }),\n    { padPlace } = state,\n    SENS_ZONE = 200,\n    padStart = React.useRef(),\n    padEnd = React.useRef(),\n    padPlacement = React.useRef(),\n\n    /**\n     * Определим положение трэкпада, и выполним коллбэк, передав туда номер страницы\n     * тут хардкод, но в идеале надо сделать так, чтоб трэк бар принимал количество страниц \n     * и равномерно их распределял по бару\n     * @param {Object} e event\n     */\n    navigate = e => {\n      padPlacement.current = e.clientX - padStart.current;\n\n      if (padPlacement.current >= 0 && padPlacement.current <= (padEnd.current - padStart.current)) {\n        setState({\n          padPlace: e.clientX - padStart.current\n        });\n      }\n\n      const debouncedNav = _.debounce(() => {\n        switch (true) {\n          case padPlacement.current <= SENS_ZONE:\n            navigateTo(0);\n            break;\n        \n          case padPlacement.current >= (parseInt(barLength) - SENS_ZONE):\n            navigateTo(2);\n            break;\n                    \n          case padPlacement.current >= parseInt(barLength)/2 - SENS_ZONE || padPlacement.current <= parseInt(barLength)/2 + SENS_ZONE:\n            navigateTo(1);\n            break;\n        }\n      }, 500);\n\n      debouncedNav();\n    },\n\n    onMovePad = e => {\n      let original_event = e.type === 'mousemove' ? e : e.touches[0];\n      e.preventDefault();\n      e.stopPropagation();\n      navigate(original_event);\n    },\n\n    /**\n     * Когда отпустим кнопку мыши/тач пад, удаляем соотв. эвенты с документа\n     * @param {Object} e event\n     */\n    onDropPad = (e) => {\n      if (e.type === 'touchend') {\n        document.removeEventListener('touchmove', onMovePad);\n        document.removeEventListener('touchend', onDropPad);\n      } else {\n        document.removeEventListener('mousemove', onMovePad);\n        document.removeEventListener('mouseup', onDropPad);\n      }\n    },\n\n    /**\n     * При нажатии на кнопку мыши/тач пад, вешаем соотв. эвенты на документ\n     * @param {Object} e event\n     */\n    onDragPad = (e) => {\n      let original_event = e.type === 'mousedown' ? e : e.touches[0];\n      e.preventDefault();\n      e.stopPropagation();\n\n      // Получим начало и конец трэк бара, при первом нажатии\n      if (_.isUndefined(padStart.current)) {\n        padStart.current = original_event.clientX;\n        padEnd.current = original_event.clientX + parseInt(barLength);\n      }\n\n      if (e.type === 'mousedown') {\n        document.addEventListener('mousemove', onMovePad);\n        document.addEventListener('mouseup', onDropPad);\n      } else if (e.type === 'touchstart') {\n        document.addEventListener('touchmove', onMovePad);\n        document.addEventListener('touchend', onDropPad);\n      }\n    };\n\n  return (\n    <React.Fragment>\n      <div\n          className=\"track-bar\"\n          css={css`\n            width: ${barLength}px;\n            height: 25px;\n            position: absolute;\n            background-color: #435063;\n            z-index: 1000;\n            bottom: 130px;\n            left: 50%;\n            transform: translateX(-50%);\n          `}\n      >\n        <div \n          className=\"track-bar__pad\"\n          onMouseDown={(e) => onDragPad(e)}\n          onTouchStart={(e) => onDragPad(e)}\n          css={css`\n            width: 80px;\n            height: 110px;\n            transform: translate(-50%, -35%);\n            position: absolute;\n            left: ${padPlace}px;\n            background-image: url('/images/track-pad.svg');\n            background-repeat: no-repeat;\n            background-size: contain;\n            background-position: center;\n            cursor: move;\n          `}\n        ></div>\n        <div \n          className=\"track-bar__background\"\n          onMouseDown={(e) => onDragPad(e)}\n          onTouchStart={(e) => onDragPad(e)}\n          css={css`\n            height: 25px;\n            width: ${padPlace}px;\n            background-color: #ffffff;\n          `}\n        ></div>\n      </div>\n      <ul\n        className=\"track-bar_description\"\n        css={css`\n          width: ${parseInt(barLength)}px;\n          padding-left: 0;\n          height: 25px;\n          position: absolute;\n          z-index: 1000;\n          bottom: 40px;\n          left: 50%;\n          transform: translateX(-50%);\n          display: flex;\n          justify-content: space-between;\n          list-style: none;\n          color: #ffffff;\n          font-size: 30px;\n        `}\n      >\n        {_.isUndefined(barDesc) ? null : _.map(barDesc, desc => <li key={uuidv4()}>{desc}</li>)}\n      </ul>\n    </React.Fragment>\n  );\n};\n\nexport { TrackBar };","/** @jsx jsx */\nimport React from 'react';\nimport { css, jsx } from '@emotion/core'\n\nconst Next = ({ display }) => {\n  return (\n    <div\n      className=\"track-bar\"\n      css={css`\n        display: ${display};\n        width: 100%;\n        height: 170px;\n        position: absolute;\n        z-index: 1000;\n        bottom: 0;\n        left: 0;\n        background-image: url('/images/next.png');\n        background-image: url(/images/next.png);\n        background-position: center bottom;\n        background-size: contain;\n        background-repeat: no-repeat;\n      `}\n    ></div>\n  );\n};\n\nexport { Next };","/** @jsx jsx */\nimport React, { useState } from 'react'\nimport { css, jsx } from '@emotion/core'\nimport { SliderContent } from './../slider_content';\nimport { Slide } from './../slide';\nimport { Dots } from './../dots';\nimport { TrackBar } from './../track_bar';\nimport { Next } from './../next';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport _ from 'lodash';\n\n/**\n * @function Slider\n */\nconst Slider = ({ settings, slides }) => {\n  const { sliderDots, \n      sliderDirection, \n      trackBar, \n      trackBarDesc, \n      showNext \n    } = settings,\n    getWidth = () => window.innerWidth,\n    getHeight = () => window.innerHeight,\n    getSlideLength = sliderDirection === 'Y' ? getHeight : getWidth,\n    sliderRef = React.useRef(),\n    thumbRef = React.useRef(),\n    diff = React.useRef(),\n    moveEnd = React.useRef(),\n\n    [state, setState] = useState({\n      activeIndex: 0,\n      translate: 0,\n      transition: 0.45,\n      cursorPlacement: 0\n    }),\n\n    { translate, transition, activeIndex } = state,\n\n    navigateTo = (pageNum) => {\n      setState({\n        ...state,\n        activeIndex: pageNum,\n        translate: pageNum * getSlideLength()\n      });\n    },\n\n    nextSlide = () => {\n      if (activeIndex === slides.length - 1) {\n        return setState({\n          ...state,\n          translate: 0,\n          activeIndex: 0\n        })\n      }\n\n    setState({\n      ...state,\n      activeIndex: activeIndex + 1,\n      translate: (activeIndex + 1) * getSlideLength()\n    });\n  },\n\n  prevSlide = () => {\n    if (activeIndex === 0) {\n      return setState({\n        ...state,\n        translate: (slides.length - 1) * getSlideLength(),\n        activeIndex: slides.length - 1\n      })\n    }\n\n    setState({\n      ...state,\n      activeIndex: activeIndex - 1,\n      translate: (activeIndex - 1) * getSlideLength()\n    })\n  },\n\n  handleMove = e => {\n    let original_event = e.type === 'mousemove' ? e : e.touches[0];\n    e.preventDefault();\n    e.stopPropagation();\n\n    const calcCurrentPlace = _.debounce(() => {\n      moveEnd.current = original_event.clientY;\n    }, 50);\n\n    calcCurrentPlace();\n  },\n \n  handleEndMove = (e) => {\n\n      if (diff.current < moveEnd.current) {\n        prevSlide();\n      } else if (diff.current > moveEnd.current) {\n        nextSlide();\n      }\n\n    if (e.type === 'touchstart') {\n      document.removeEventListener('touchmove', handleMove);\n      document.removeEventListener('touchend', handleEndMove);\n    } else {\n      document.removeEventListener('mousemove', handleMove);\n      document.removeEventListener('mouseup', handleEndMove);\n    }\n  },\n\n  handleStartMove = (e) => {\n    diff.current = e.type === 'mousedown' ? e.clientY : e.touches[0].clientY;\n\n    if (e.type === 'mousedown') {\n      document.addEventListener('mousemove', handleMove);\n      document.addEventListener('mouseup', handleEndMove);\n    } else {\n      document.addEventListener('touchmove', handleMove);\n      document.addEventListener('touchend', handleEndMove);\n    }\n  },\n\n  SlidesContent = sliderDirection === 'Y' ? \n    <SliderContent\n      ref={thumbRef}\n      onMouseDown={(e) => handleStartMove(e)}\n      onTouchStart={(e) => handleStartMove(e)}\n      translate={translate}\n      transition={transition}\n      height={`${getSlideLength() * slides.length}px`}\n      width={'100%'}\n      flexDirection={'column'}\n      direction={sliderDirection}\n    > \n      {slides.map((slide, i) => (\n        <Slide key={uuidv4()} content={slide} width={getWidth()}/>\n      ))}\n    </SliderContent> :\n    <SliderContent\n      ref={thumbRef}\n      translate={translate}\n      transition={transition}\n      width={`${getSlideLength() * slides.length}px`}\n      height={'100%'}\n      flexDdirection={'row'}\n      direction={sliderDirection}\n    >\n      {slides.map((slide, i) => (\n        <Slide key={uuidv4()} content={slide} width={getWidth()}/>\n      ))}\n    </SliderContent>\n  \n  return (\n    <React.Fragment>\n      <div css={SliderCSS} ref={sliderRef}>\n        {SlidesContent}\n        {sliderDots ? <Dots slides={slides} activeIndex={activeIndex} /> : null }\n      </div>\n      {trackBar ? <TrackBar navigateTo={(pageNum) => navigateTo(pageNum)} barLength={'700'} barDesc={!_.isUndefined(trackBarDesc) ? trackBarDesc : null}/> : null }\n      <Next display={ showNext && activeIndex < slides.length - 1 ? 'block' : 'none' }/>\n    </React.Fragment>\n  );\n};\n\nconst SliderCSS = css`\n  position: relative;\n  height: 99vh;\n  width: 100vw;\n  margin: 0 auto;\n  overflow: hidden;\n`;\nexport { Slider };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Slider } from './components/slider';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nconst content = [\n  {\n    type: 'image',\n    url: '/images/box_1.png'\n  },\n  {\n    type: 'image',\n    url: '/images/box_2.png'\n  },\n  {\n    type: 'slider',\n    content: [\n      {\n        type: 'image',\n        url: '/images/box_3_1.png'\n      },\n      {\n        type: 'image',\n        url: '/images/box_3_2.png'\n      },\n      {\n        type: 'image',\n        url: '/images/box_3_3.png'\n      },\n    ]\n  },\n];\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Slider \n      slides={content}\n      settings={{\n        sliderDots: true,\n        sliderDirection: 'Y',\n        trackBar: false,\n        showNext: true\n      }} \n    />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}